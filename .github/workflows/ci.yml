name: CI to Docker Hub

on:
  workflow_dispatch:
    branches:
      - main
    tags: [ 'v*' ]
    inputs:
      folder: 
        description: 'Dockerfile folder location'
        required: true
        type: string
        default: './images/'
      release_tag:
        description: 'Release tag'
        required: true
        type: string
        default: 'latest'

jobs:
  set-envs:
    name: Set Environment Variables
    runs-on: ubuntu-latest
    outputs:
      lastReleaseTag: ${{ steps.get_last_release_tag.outputs.lastReleaseTag }}
      IMAGE_NAME_FOLDER: ${{ steps.set-image-name.outputs.IMAGE_NAME_FOLDER }}
      REPO: ${{ steps.set-repo.outputs.REPO }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3.5.2
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Set Repo Name
      id: set-repo
      run: |
        REPO=natandias1
        echo "REPO=$REPO" >> $GITHUB_OUTPUT
    
    - name: "Set image name folder"
      id: set-image-name
      run: | 
        IMAGE_NAME_FOLDER=$(awk -F "/" '{print $NF}' <<< ${{ github.event.inputs.folder }})
        echo "IMAGE_NAME_FOLDER=$IMAGE_NAME_FOLDER" >> $GITHUB_OUTPUT
        echo "Image name folder: $IMAGE_NAME_FOLDER"
    
    - name: Get Last release tag
      uses: actions/github-script@v3
      id: get_last_release_tag
      with:
        script: |
          const { data: releases } = await github.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo
          });

          const lastReleaseTag = releases[0].tag_name;
          core.setOutput('lastReleaseTag', lastReleaseTag);

          console.log(`Last release tag: ${lastReleaseTag}`);

  build-docker-image-and-push:
    name: Build and Push Docker Image
    needs: set-envs
    runs-on: ubuntu-latest
    steps:
    - name: Build and Push Docker Image
      id: build-and-push
      run: |
        docker build -t ${{ needs.set-envs.outputs.REPO }}/${{ needs.set-envs.outputs.IMAGE_NAME_FOLDER }}:${{ needs.set-envs.outputs.lastReleaseTag }} -f ${{ github.event.inputs.folder }}/Dockerfile .
        docker push ${{ needs.set-envs.outputs.REPO }}/${{ needs.set-envs.outputs.IMAGE_NAME_FOLDER }}:${{ needs.set-envs.outputs.lastReleaseTag }}
    
    #- name: Docker Metadata action
    #  id: meta
    #  uses: docker/metadata-action@v4.4.0
    #  with:
    #    images: ${{ env.REPO }}/${{ env.IMAGE_NAME_FOLDER }}
    #    tags: |
    #      type=ref,event=branch
    #      type=ref,event=tag
    #      type=semver,pattern={{major}}.{{minor}}.{{patch}}
    #  
    #- name: Build and push Docker images
    #  uses: docker/build-push-action@v4.0.0
    #  with:
    #    file: ${{ github.event.inputs.folder }}/Dockerfile
    #    context: .
    #    tags: ${{ steps.meta.outputs.tags }}
    #    push: ${{ github.event_name != 'pull_request' }}
